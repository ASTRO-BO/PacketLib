PacketLib non funziona. L'ultima versione funzionanete è la PACKETLIB_1_3_6_BETA1. Da lì in aventi è stato introdotto un bug.
Ecco come procedere.
- ripartire dalla versione funzionante
- aggiungere le classi aggiornate dell'ultima versione, una alla volta.
- ad ogni aggiunta provare il processor 32.01

26 feb 2005
+ nel caso di block fixed (layout 2) non è presente la classe di metodi get/set fiekdValue 5_15 4_14 per i blocchi, ma solo per i singoli valori

KNOWN ISSUE
4 Nov 2004
1. non lavora con prefix di dimensione dispari
2. sembra non lavorare in little endian
3. se la definizione del packet è parziale, non viene mostrato nulla nel packet viewer


- sostituire la directory doc con la ref
- togliere il link PacketLib.html
- finire la serial
- define -DQNX per le classi di IO
- costruire il modello rose e metterlo nella cartella model


--------------------------
Curare la liberazione della memoria dai buffer nei due tipi di packet con block


INTERFACCE

2) Mettere in ordine tra le interfacce delle varie classi
2) Organizzare la nuova IOLib


OTTIMIZZAZIONI
1) Permettere la distruzione di un Packet senza che il programma si pianti

NUOVE FUNZIONI
2) Fare in modo che si possa assegnare ad un packet solamente una parte del packet con il
setByteStream
3) Aggiungere anche il tipo di packet con blocchi di vario tipo in sequenza prestabilit�(al
limite il blocco pu�essere assente, ma la sequenza va rispettata).

      string




Ottobre 2002
1) Realizzare invio e ricezione di stringhe per i socket e aggiungere le stesse
funzionalit�nelle classe InputSocketServer e OutputSocketClient
2) La generazione dei packet deve essere pi semplice:
		a) si settano i valori dei field
		b) si richiama il metodo Packet::get_packet_output() che restituisce il ByteStream risultante
Spostare generateStream nei protected. Inoltre deve essere modificato il comportamento
del Packet. Alla creazione del packet viengono create i ByteStream di ogni PartOfPacket
Quando un ByteStream viene passato come argomento, questo viene passato per valore
Quando un ByteStream viene restituito come valore di ritorno, questo viene passato per
valore.
In tal modo il Packet ha sempre le sue copie locali di ByteStreams che non interagiscono
mai con l'esterno.
Usare i memcopy per maggiori prestazioni.




				virtual Packet* readPacket() throw(PacketExceptionIO*) {};
				virtual bool writePacket(Packet* p) throw(PacketExceptionIO*) = 0;

Sono arrivato qui:
Packet* InputPacketStream::readPacket() throw(PacketExceptionIO*)
